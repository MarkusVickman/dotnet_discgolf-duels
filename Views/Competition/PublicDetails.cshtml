@model discgolf_duels.Models.Competition
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager

@{
    ViewData["Title"] = "Details";

        var registrations = ViewBag.Registrations as List<Registration>;
        var playings = ViewBag.Playings as List<Playing>;

//Funktion som skriver ut par på ett snyggare sätt
    @functions {
    public string SumOfDigits(string throws, string par)
    {

        // Summera siffrorna i den första strängen
        int sumOfThrows = throws.Where(char.IsDigit).Sum(c => c - '0');

        // Summera siffrorna i den andra strängen (till exempel @model.course.par)
        int sumOfCoursePar = par.Where(char.IsDigit).Sum(c => c - '0');

        //Koden nedan kan behöva formuleras om, lika så hur par-strängen är utformad. Det är med på restlistan
        if (throws.Contains('0'))
        {
            return "Playing";
        }

        if (sumOfThrows - sumOfCoursePar < 0) {
            return (sumOfThrows - sumOfCoursePar).ToString();
        } else {
        return '+' + (sumOfThrows - sumOfCoursePar).ToString();
        }
    }

}
}

<h1>Details</h1>

<div>
    <h4>Competition</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CompetitionName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CompetitionName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Course)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Course!.CourseName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CompetitionDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CompetitionDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.MaxPlayerCount)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.MaxPlayerCount)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PublicUser)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PublicUser!.DisplayName)
        </dd>
    </dl>
</div>
<div>
                        @if (SignInManager.IsSignedIn(User))
                    {
    <a asp-controller="Registration" asp-action="Create" asp-route-id="@Model?.CompetitionId">Register</a>} |
    <a asp-controller="Competition" asp-action="ListAll">Back to List</a>
</div>
<br>
<br>
<!-- skriver även ut relaterade data från registreringar samt från playings-->
@if (registrations != null)
{
     <div>
            <h4>Registrations</h4>
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            User
                        </th>
                        <th>
                            Registration date
                        </th>
                    </tr>
                </thead>       
                <tbody>
    @foreach (var registration in registrations)
    {
                        <tr>
                            <td>
                                @registration.PublicUser!.DisplayName
                            </td>
                            <td>
                                @registration.RegisterDate
                            </td>
                        </tr>
                    }
                </tbody>
            </table>            
        </div>
    }
    <br>
<br>
@if (playings != null)
{
     <div>
            <h4>Standings</h4>
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            User
                        </th>
                        <th>
                            Result
                        </th>
                        <th>
                            Group
                        </th>
                    </tr>
                </thead>       
                <tbody>
    @foreach (var playing in playings)
    {
                        <tr>
                            <td>
                                @playing.PublicUser!.DisplayName
                            </td>
                            <td>
                                @SumOfDigits(@playing.Par!, @playing.Play!.Course!.Par)
                            </td>
                            <td>
                                @playing.GroupNr
                            </td>
                        </tr>
                    }
                </tbody>
            </table>            
        </div>
        }

