@model discgolf_duels.Models.Playing

@{
    ViewData["Title"] = "Edit";
    String par = Model.Par;

    int[] parArray = new int[par.Length];

    for (int i = 0; i < par.Length; i++)
    {
        parArray[i] = int.Parse(par[i].ToString());
    }

}

<h1>Edit</h1>

<h4>Playing</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="PlayingId" />
            <div class="form-group">
                <label asp-for="PlayId" class="control-label"></label>
                <select asp-for="PlayId" class="form-control" asp-items="ViewBag.PlayId"></select>
                <span asp-validation-for="PlayId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Par" class="control-label"></label>
                <input asp-for="Par" class="form-control" />
                <span asp-validation-for="Par" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="GroupNr" class="control-label"></label>
                <input asp-for="GroupNr" class="form-control" />
                <span asp-validation-for="GroupNr" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PublicUserId" class="control-label"></label>
                <select asp-for="PublicUserId" class="form-control" asp-items="ViewBag.PublicUserId"></select>
                <span asp-validation-for="PublicUserId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>
<br><br>



<div class="card">
    <div class="card-header">
        Score Card
    </div>
    <div class="card-body">
        @for (int i = 0; i < parArray.Length; i++)
        {
            <div class="mb-3 row">
                <label for="staticEmail" class="col-sm-2 col-form-label">Korg</label>
                <div class="col-sm-10">
                    <input type="number" readonly class="form-control-plaintext" id="staticEmail" value="@(i+1)">
                </div>
            </div>
            <div class="mb-3 row">
                <label for="inputPassword" class="col-sm-2 col-form-label">Kast</label>
                <div class="col-sm-10">
                    <input type="number" class="form-control" id="inputPassword" value="@parArray[i]">
                </div>
            </div>
        }
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-secondary">Prev</button>
        <button type="button" class="btn btn-primary">Next</button>
    </div>
</div>



@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
