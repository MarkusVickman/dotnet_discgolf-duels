@model IEnumerable<discgolf_duels.Models.Playing>

@{
    ViewData["Title"] = "Rounds";


//Funktion som skriver ut par på ett snyggare sätt
@functions {
    public string SumOfDigits(string throws, string par)
    {

        if (throws.Contains('0'))
        {
            return "Playing";
        }

        // Summera siffrorna i den första strängen
        int sumOfThrows = throws.Where(char.IsDigit).Sum(c => c - '0');

        // Summera siffrorna i den andra strängen (till exempel @model.course.par)
        int sumOfCoursePar = par.Where(char.IsDigit).Sum(c => c - '0');


        return (sumOfThrows - sumOfCoursePar).ToString();
    }

}
}

<h1>Your rounds</h1>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.RegisterDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Play!.Competition)
            </th>
            <th>
               Result
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Play!.Course)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @item.RegisterDate.ToString("yyyy-MM-dd HH:mm")
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Play!.Competition!.CompetitionName)
                </td>
                <td>
                    @SumOfDigits(item.Par!, item.Play!.Course!.Par)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Play.Course.CourseName)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.PlayingId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.PlayingId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.PlayingId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
